{
	"info": {
		"_postman_id": "b1ae13b2-b9b4-438f-869b-c472835bd824",
		"name": "udacity-fsnd-udaspicelatte",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23150326"
	},
	"item": [
		{
			"name": "public",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "barista",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n            \"recipe\": [\r\n                {\r\n                    \"color\": \"red\",\r\n                    \"parts\": 1\r\n                }\r\n            ],\r\n            \"title\": \"Sex on the Beach\"\r\n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n            \"recipe\": [],\r\n            \"title\": \"bottled water\"\r\n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InF5LWNyQllmdlV1b0RqdHVUaHNzeCJ9.eyJpc3MiOiJodHRwczovL2oyc2xlZWsudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDYzMjYzN2VmZDhkOTBiMjQ3NDgxNGE2OSIsImF1ZCI6ImRyaW5rcyIsImlhdCI6MTY2MzQ0OTUzMywiZXhwIjoxNjYzNDU2NzMzLCJhenAiOiJiaTQyT29JR0pGQ3JNRzJQNUNpUGVMcUg1YVNNS0s0SiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZ2V0OmRyaW5rcyIsImdldDpkcmlua3MtZGV0YWlsIl19.kl8VKU6t2dCmztPC8vTw-va7XUz2bEQJ6hxkTO2yoGPIj_P0JN1bVsnzcjR82kNJVTXFKXlE2eKj-6rrEM3ZqvMOVf5J87wVoHLjMDC9jNjw9FLLUCjkTLXCpW-FZ9ufIyLoohB98m9dLX-iUKQAuhMNlyxyHIZ5KLEIMeeGRnGHqeLXf2rKsBy5_kgBQ-tdwEtGzcyf_uYe1xvSciVFhQfeuPa-i5JTw5MLUwzaf6rLr-ySljSZ9G5h1LtWHw4zwT2aIbs8S2IoVSz9ytLNgEM1Eeui6u6SnqlpgofT8wO3lQDw_-8g6zau1CB5BEHkDQWRWVf1CJ228S5FGM6tbg",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "manager",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InF5LWNyQllmdlV1b0RqdHVUaHNzeCJ9.eyJpc3MiOiJodHRwczovL2oyc2xlZWsudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDYzMjYzMTc2ZTE1ZWJhOTQzYjViOWEwYyIsImF1ZCI6ImRyaW5rcyIsImlhdCI6MTY2MzQ0NzUyOSwiZXhwIjoxNjYzNDU0NzI5LCJhenAiOiJiaTQyT29JR0pGQ3JNRzJQNUNpUGVMcUg1YVNNS0s0SiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmRyaW5rcyIsImdldDpkcmlua3MiLCJnZXQ6ZHJpbmtzLWRldGFpbCIsInBhdGNoOmRyaW5rcyIsInBvc3Q6ZHJpbmtzIl19.LpQZ60BXAGkVQ0UqkDgR9h5zxQoMjs8-2NklfIUr6XHe7UwjevW-CrZ9RXEC79FlRaJfj4pIgTCRkEfJQFNqP2gCEDFksESJlGVEHMiuQX6btVVmXYyiPycEcLtsLbhyOIfer1pvFtZaHfgdLGzioke0x0Y7UcdgQxFErRqMfSeoDQUnyztrh9PI39a89GdSXC7zwa9FeKFNqPChS5yCZO0i4oHC4qn0NDO2uiXaKQCQnVYobIRiNX_lVtQJgyzNTR8_RSK3LBpdkmDoTNse8yn3TCyqCdExqRQfY74kwJxy7fAGD7aIGOLTMmku16IGkn9GSjuj5yATEjgUOrBzBw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InF5LWNyQllmdlV1b0RqdHVUaHNzeCJ9.eyJpc3MiOiJodHRwczovL2oyc2xlZWsudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDYzMjYzMTc2ZTE1ZWJhOTQzYjViOWEwYyIsImF1ZCI6ImRyaW5rcyIsImlhdCI6MTY2MzQ0NzUyOSwiZXhwIjoxNjYzNDU0NzI5LCJhenAiOiJiaTQyT29JR0pGQ3JNRzJQNUNpUGVMcUg1YVNNS0s0SiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmRyaW5rcyIsImdldDpkcmlua3MiLCJnZXQ6ZHJpbmtzLWRldGFpbCIsInBhdGNoOmRyaW5rcyIsInBvc3Q6ZHJpbmtzIl19.LpQZ60BXAGkVQ0UqkDgR9h5zxQoMjs8-2NklfIUr6XHe7UwjevW-CrZ9RXEC79FlRaJfj4pIgTCRkEfJQFNqP2gCEDFksESJlGVEHMiuQX6btVVmXYyiPycEcLtsLbhyOIfer1pvFtZaHfgdLGzioke0x0Y7UcdgQxFErRqMfSeoDQUnyztrh9PI39a89GdSXC7zwa9FeKFNqPChS5yCZO0i4oHC4qn0NDO2uiXaKQCQnVYobIRiNX_lVtQJgyzNTR8_RSK3LBpdkmDoTNse8yn3TCyqCdExqRQfY74kwJxy7fAGD7aIGOLTMmku16IGkn9GSjuj5yATEjgUOrBzBw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n            \"recipe\": [\r\n                {\r\n                    \"color\": \"red\",\r\n                    \"parts\": 1\r\n                }\r\n            ],\r\n            \"title\": \"Sex on the Beach\"\r\n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							],
							"query": [
								{
									"key": "data",
									"value": "{title:Sex on the beach, recipe:{name:tonic,color:red,parts:1}}",
									"disabled": true
								},
								{
									"key": "recipe",
									"value": "[name:Tonic, color:red,parts:1]",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Water5\"\n}"
						},
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6InF5LWNyQllmdlV1b0RqdHVUaHNzeCJ9.eyJpc3MiOiJodHRwczovL2oyc2xlZWsudXMuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDYzMjYzMTc2ZTE1ZWJhOTQzYjViOWEwYyIsImF1ZCI6ImRyaW5rcyIsImlhdCI6MTY2MzQ0NzUyOSwiZXhwIjoxNjYzNDU0NzI5LCJhenAiOiJiaTQyT29JR0pGQ3JNRzJQNUNpUGVMcUg1YVNNS0s0SiIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmRyaW5rcyIsImdldDpkcmlua3MiLCJnZXQ6ZHJpbmtzLWRldGFpbCIsInBhdGNoOmRyaW5rcyIsInBvc3Q6ZHJpbmtzIl19.LpQZ60BXAGkVQ0UqkDgR9h5zxQoMjs8-2NklfIUr6XHe7UwjevW-CrZ9RXEC79FlRaJfj4pIgTCRkEfJQFNqP2gCEDFksESJlGVEHMiuQX6btVVmXYyiPycEcLtsLbhyOIfer1pvFtZaHfgdLGzioke0x0Y7UcdgQxFErRqMfSeoDQUnyztrh9PI39a89GdSXC7zwa9FeKFNqPChS5yCZO0i4oHC4qn0NDO2uiXaKQCQnVYobIRiNX_lVtQJgyzNTR8_RSK3LBpdkmDoTNse8yn3TCyqCdExqRQfY74kwJxy7fAGD7aIGOLTMmku16IGkn9GSjuj5yATEjgUOrBzBw",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost:5000",
			"type": "string"
		}
	]
}